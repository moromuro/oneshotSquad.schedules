{"version":3,"sources":["App.js","components/gameTable.js","index.js"],"names":["App","props","state","time","hours","minutes","seconds","milliseconds","startTime","timer","duration","startTimer","start","bind","nextGame","parseInt","Math","floor","toString","padStart","this","length","i","found","GAMES","game","Date","date","getTime","now","window","setInterval","run","diff","remaining","setState","msToTime","clearTimeout","className","toLocaleString","dateStyle","timeStyle","Intl","DateTimeFormat","resolvedOptions","timeZone","players","description","id","renderGameTable","style","height","React","Component","hot","module","GameTable","rows","forEach","index","push","renderInfo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87e00541.chunk.js","sourcesContent":["import React from 'react';\r\nimport { hot } from 'react-hot-loader';\r\nimport './App.css';\r\n\r\nimport GameTable from './components/gameTable';\r\nimport GAMES from './games.json';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            time: {\r\n                hours: 0,\r\n                minutes: 0,\r\n                seconds: 0,\r\n                milliseconds: 0,\r\n            },\r\n            startTime: 0,\r\n            timer: null,\r\n            duration: 0,\r\n        }\r\n        this.startTimer = this.start.bind(this);\r\n        this.nextGame = [];\r\n    }\r\n\r\n    msToTime(duration) {\r\n        let milliseconds = parseInt((duration % 1000));\r\n        let seconds = Math.floor((duration / 1000) % 60);\r\n        let minutes = Math.floor((duration / (1000 * 60)) % 60);\r\n        let hours = Math.floor(duration / (1000 * 60 * 60));\r\n\r\n        hours = hours.toString().padStart(2, '0');\r\n        minutes = minutes.toString().padStart(2, '0');\r\n        seconds = seconds.toString().padStart(2, '0');\r\n        milliseconds = milliseconds.toString().padStart(3, '0');\r\n    \r\n        return {\r\n          hours,\r\n          minutes,\r\n          seconds,\r\n          milliseconds\r\n        };\r\n    }\r\n \r\n    start() {\r\n        if (this.nextGame.length === 0) {\r\n            \r\n            let i = 0;\r\n            let found = false;\r\n            while (!found) {\r\n            \r\n                if (i === GAMES.length) {\r\n                    break;\r\n                }\r\n                \r\n                const game = GAMES[i];\r\n\r\n                if ((new Date(game.date).getTime() - Date.now()) > 0) {\r\n                    this.nextGame = GAMES[i];\r\n                    found = true;\r\n                }\r\n\r\n                i++;\r\n            }\r\n        }\r\n\r\n        if (!this.state.timer) {\r\n            /**\r\n             * Set the timer from the point of opening the site while staying there.\r\n             */ \r\n            this.state.startTime = Date.now();\r\n            this.state.duration = new Date(this.nextGame.date).getTime() - Date.now();\r\n            this.timer = window.setInterval(() => this.run(), 1000);\r\n        }\r\n    }\r\n\r\n    run() {\r\n        const diff = Date.now() - this.state.startTime;\r\n        \r\n        // count down\r\n        let remaining = this.state.duration - diff;\r\n\r\n        if (remaining < 0) {\r\n          remaining = 0;\r\n        }\r\n        \r\n        this.setState(() => ({\r\n          time: this.msToTime(remaining)\r\n        }));\r\n\r\n        if (remaining === 0) {\r\n          window.clearTimeout(this.timer);\r\n          this.timer = null;\r\n        }\r\n    }\r\n\r\n    renderGameTable() {\r\n        return(\r\n            <GameTable />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                {this.startTimer()}\r\n                <div className=\"description-header card\">\r\n                    <h1>ONESHOT SQUAD</h1>\r\n                    <p>Games listed under are fanmade and updated at random times.</p>\r\n                    <p>With issues regarding games, contact Moro on the discord channel.</p>\r\n                    <h3>Ths site is still very much WIP and backend guy is in charge of design as you can see. :suffer:</h3>\r\n                </div>\r\n                <div className=\"timer card\">\r\n                    <div className=\"bigTimerCard\">\r\n                        <p className=\"bigTimerLabel\">Next Game in</p>\r\n                        <p className=\"bigTimer\">\r\n                            <strong>\r\n                                {this.state.time.hours} : {this.state.time.minutes} : {this.state.time.seconds}\r\n                            </strong>\r\n                        </p>\r\n                    </div>\r\n                    \r\n                    <br></br>\r\n                    <p className=\"timerText\"><strong>{new Date(this.nextGame.date).toLocaleString('en-gb', { dateStyle: 'medium', timeStyle: 'long'})}</strong></p>\r\n                    <span className=\"infoText\">Your timezone: {Intl.DateTimeFormat().resolvedOptions().timeZone}</span>\r\n                    <br></br>\r\n                    <p className=\"timerText\">{this.nextGame.date.toString('en-gb')}</p>\r\n                    <span className=\"infoText\">UTC time</span>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <p>Players</p>\r\n                    <p>{this.nextGame.players}</p>\r\n                    <br></br>\r\n                    <p>Description</p>\r\n                    <p>{this.nextGame.description}</p>\r\n                    <br></br>\r\n                </div>\r\n\r\n                <div className=\"gameList\">\r\n                    <div className=\"middleBreak\">\r\n                        <h2 id=\"comingGames\">Gamelist</h2>\r\n                    </div>\r\n                    {this.renderGameTable()}\r\n                </div>\r\n                <div style={{ height: '100px' }} />\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default hot(module)(App);\r\n","import React from 'react';\r\nimport './gameTable.css';\r\n\r\nimport GAMES from '../games.json';\r\n\r\nclass GameTable extends React.Component {\r\n\r\n    renderInfo() {\r\n        const rows = [];\r\n        GAMES.forEach((game, index) => {\r\n            if ((new Date(game.date).getTime() - Date.now()) > 0) {\r\n                rows.push(\r\n                    <div key={index} className=\"gameCard\">\r\n                        <h2 className=\"userTime\">{new Date(game.date).toLocaleString('en-gb', { dateStyle: 'medium', timeStyle: 'medium'})}</h2>\r\n                        <p>{game.date.toString('en-gb', { dateStyle: 'medium', timeStyle: 'medium'})}</p>\r\n                        <p>{game.players}</p>\r\n                        <p>{game.description}</p>\r\n                    </div>\r\n                );\r\n            }\r\n        })\r\n        \r\n        return rows;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"gameTable\">\r\n                {this.renderInfo()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GameTable;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}